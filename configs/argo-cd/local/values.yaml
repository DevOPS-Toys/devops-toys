nameOverride: argocd
fullnameOverride: argocd
extraObjects:
  - apiVersion: v1
    kind: Secret
    metadata:
      labels:
        argocd.argoproj.io/secret-type: repository
      name: docker-io-helm-oci
      namespace: argocd
    stringData:
      url: registry-1.docker.io/bitnamicharts
      name: bitnamicharts
      type: helm
      enableOCI: "true"
configs:
  cm:
    create: true
    exec.enabled: true
    statusbadge.enabled: true
  #   accounts.watcher: login,apiKey
  #   accounts.watcher.enabled: "true"
  # params:
  #   applicationsetcontroller.policy: sync
  #   applicationsetcontroller.enable.progressive.syncs: true
#   rbac:
#     create: true
#     policy.default: role:readonly
#     policy.csv: |
#       p, role:admin, *, *, *, allow
#       g, admin, role:admin

#       p, role:application-watcher, applications, get, */*, allow
#       g, watcher, role:application-watcher
# controller:
  metrics:
    enabled: false
    serviceMonitor:
      enabled: false
      # labels:
      #   release: prometheus
      # selector:
      #   release: prometheus
dex:
  enabled: false
  serviceMonitor:
    enabled: false
    labels:
      release: prometheus
    selector:
      release: prometheus
server:
  metrics:
    enabled: false
    serviceMonitor:
      enabled: false
      labels:
        release: prometheus
      selector:
        release: prometheus
  ingress:
    enabled: false
    annotations:
      cert-manager.io/cluster-issuer: devops-local
      nginx.ingress.kubernetes.io/ssl-passthrough: "true"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    ingressClassName: nginx
    hostname: cd.devops.local
    path: /
    tls: true
  ingressGrpc:
    enabled: false
    ingressClassName: nginx

applicationSet:
  enabled: true
  metrics:
    enabled: false
    serviceMonitor:
      enabled: false
      labels:
        release: prometheus
      selector:
        release: prometheus
notifications:
  enabled: false